package it.pa.repdgt.gestioneutente.repository;

import java.util.List;
import java.util.Optional;
import java.util.Set;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import it.pa.repdgt.shared.entity.UtenteEntity;

@Repository
public interface UtenteRepository extends JpaRepository<UtenteEntity, Long> { 
	
	public Optional<UtenteEntity> findByCodiceFiscale(String codiceFiscaleUtente);
	
	@Query(value = "SELECT utente FROM UtenteEntity utente WHERE utente.codiceFiscale = :theCodiceFiscale")
	public UtenteEntity findUtenteEagerByCodiceFiscale(@Param(value = "theCodiceFiscale") String theCodiceFiscale);
	
	@Query(value = " "
			 + "SELECT * "
			 + "	FROM  ("
			 + "    	SELECT utente_and_stato.id,"
			 + "           utente_and_stato.codice_fiscale,"
			 + "           utente_and_stato.cognome,"
			 + "           utente_and_stato.email,"
			 + "           utente_and_stato.nome,"
			 + "           utente_and_stato.stato,"
			 + "           utente_and_stato.telefono,"
			 + "           utente_and_stato.mansione,"
			 + "           utente_and_stato.tipo_contratto,"
			 + "           utente_and_stato.consenso_dati,"
			 + "           utente_and_stato.data_ora_consenso_dati,"
			 + "           utente_and_stato.data_ora_aggiornamento,"
			 + "           utente_and_stato.data_ora_creazione,"
			 + "           utente_and_stato.integrazione,"
			 + "           utente_and_stato.immagine_profilo"
			 + "    		FROM ( "
			 + "    			SELECT utente.* "
			 + "                	FROM "
			 + "                    	utente utente "
			 + "                    WHERE 1=1 "
			 + "         			AND    (     :criterioRicerca IS NULL  "
             + "               			OR CONVERT( utente.ID, CHAR ) = :criterioRicerca "
             + "              			OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
             + "              			OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
             + "                        OR concat(UPPER( utente.COGNOME ), ' ' , UPPER( utente.NOME ))  = UPPER(:criterioRicerca) "
             + "              			OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike ) ) "
			 + "                    AND ( "
			 + "						 SELECT distinct u2.id "
			 + "                         	FROM utente u2 "
			 + "                            	LEFT JOIN  "
			 + "                                   (  "
			 + "												select distinct uxr.*  "
			 + "												  from utente_x_ruolo uxr  "
			 + "												  inner join referente_delegati_gestore_programma rdgp  "
			 + "												  on uxr.utente_id = rdgp.cf_utente  "
			 + "												  and uxr.ruolo_codice = rdgp.codice_ruolo  "
			 + "												  inner join programma p  "
			 + "												  on rdgp.id_ente = p.id_ente_gestore_programma  "
			 + "												  and rdgp.id_programma = p.id  "
			 + "																							    "
			 + "												  UNION  "
			 + "																							    "
			 + "												  select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  inner join referente_delegati_gestore_progetto rdgpr  "
			 + "												  on uxr.utente_id = rdgpr.cf_utente  "
			 + "												  and uxr.ruolo_codice = rdgpr.codice_ruolo  "
			 + "												  inner join progetto p  "
			 + "												  on rdgpr.id_ente = p.id_ente_gestore_progetto  "
			 + "												  and rdgpr.id_progetto = p.id  "
			 + "																							    "
			 + "												  UNION  "
			 + "																							    "
			 + "												  select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  inner join referente_delegati_partner rdp  "
			 + "												  on uxr.utente_id = rdp.cf_utente  "
			 + "												  and uxr.ruolo_codice = rdp.codice_ruolo  "
			 + "																	   "
			 + "												  UNION  "
			 + "																							    "
			 + "												  select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  inner join ente_sede_progetto_facilitatore espf  "
			 + "												  on uxr.utente_id = espf.id_facilitatore  "
			 + "												  and uxr.ruolo_codice = espf.ruolo_utente  "
			 + "												  inner join progetto p  "
			 + "												  on espf.id_ente = p.id_ente_gestore_progetto  "
			 + "												  and espf.id_progetto = p.id  "
			 + "																								 "
			 + "												  UNION  "
			 + "																							    "
			 + "												select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  inner join ente_sede_progetto_facilitatore espf  "
			 + "												  on uxr.utente_id = espf.id_facilitatore  "
			 + "												  and uxr.ruolo_codice = espf.ruolo_utente  "
			 + "												  inner join ente_partner p  "
			 + "												  on espf.id_ente = p.id_ente  "
			 + "												  and espf.id_progetto = p.id_progetto  "
			 + "																							   "
			 + "												  UNION  "
			 + "																							    "
			 + "												  select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  where uxr.ruolo_codice not in ('REG', 'DEG','REGP', 'DEGP', 'REPP', 'DEPP', 'FAC', 'VOL') "
			 + "												   )                       "
			 + "                                   ur2 "
			 + "                                   ON u2.CODICE_FISCALE = ur2.UTENTE_ID "
			 + "                                LEFT JOIN ruolo ruolo2"
			 + "                                   ON ruolo2.CODICE = ur2.RUOLO_CODICE "
			 + "                            WHERE 1=1 "
			 + "                            	AND u2.id = utente.id "
			 + "                                AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN ( :ruoli) )) = utente.id ) utente_and_stato "
			 + "     WHERE 1=1 "
			 + "     	AND (COALESCE(:stati) IS NULL OR  utente_and_stato.stato in (:stati)) "
			 + "   		ORDER BY utente_and_stato.cognome "
			 + "   	 	LIMIT :currPageIndex, :pageSize ) as utentiPaginati "
			 + "	LEFT JOIN "
			 + "    ( "
			 + "		select distinct uxr.* "
			 + "        from utente_x_ruolo uxr "
			 + "        inner join referente_delegati_gestore_programma rdgp "
			 + "        on uxr.utente_id = rdgp.cf_utente "
			 + "        and uxr.ruolo_codice = rdgp.codice_ruolo "
			 + "        inner join programma p "
			 + "        on rdgp.id_ente = p.id_ente_gestore_programma "
			 + "        and rdgp.id_programma = p.id "
			 + "                                                     "
			 + "        UNION "
			 + "                                                     "
			 + "        select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        inner join referente_delegati_gestore_progetto rdgpr "
			 + "        on uxr.utente_id = rdgpr.cf_utente "
			 + "        and uxr.ruolo_codice = rdgpr.codice_ruolo "
			 + "        inner join progetto p "
			 + "        on rdgpr.id_ente = p.id_ente_gestore_progetto "
			 + "        and rdgpr.id_progetto = p.id "
			 + "                                                     "
			 + "        UNION "
			 + "                                                     "
			 + "        select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        inner join referente_delegati_partner rdp "
			 + "        on uxr.utente_id = rdp.cf_utente "
			 + "        and uxr.ruolo_codice = rdp.codice_ruolo "
			 + "                            "
			 + "        UNION "
			 + "                                                     "
			 + "        select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        inner join ente_sede_progetto_facilitatore espf "
			 + "        on uxr.utente_id = espf.id_facilitatore "
			 + "        and uxr.ruolo_codice = espf.ruolo_utente "
			 + "        inner join progetto p "
			 + "        on espf.id_ente = p.id_ente_gestore_progetto "
			 + "        and espf.id_progetto = p.id "
			 + "                                                      "
			 + "        UNION "
			 + "                                                     "
			 + "		select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        inner join ente_sede_progetto_facilitatore espf "
			 + "        on uxr.utente_id = espf.id_facilitatore "
			 + "        and uxr.ruolo_codice = espf.ruolo_utente "
			 + "        inner join ente_partner p "
			 + "        on espf.id_ente = p.id_ente "
			 + "        and espf.id_progetto = p.id_progetto "
			 + "                                                    "
			 + "        UNION "
			 + "                                                     "
			 + "        select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        where uxr.ruolo_codice not in ('REG', 'DEG','REGP', 'DEGP', 'REPP', 'DEPP', 'FAC', 'VOL') "
			 + "         ) as ruoli"
			 + "    	ON utentiPaginati.CODICE_FISCALE = ruoli.UTENTE_ID "
			 + "    LEFT JOIN ruolo ruolo "
			 + "        ON ruolo.CODICE = ruoli.RUOLO_CODICE ",
			nativeQuery = true)
	public Set<UtenteEntity> findUtentiByFiltri(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike,
			@Param(value = "ruoli") List<String> ruoli,
			@Param(value = "stati") List<String> stati,
			@Param(value = "currPageIndex") Integer currPageIndex,
			@Param(value = "pageSize") Integer pageSize
	);
	
	@Query(value = ""
			+ "SELECT * FROM ( "
			+ "		SELECT * "
			+ "     	FROM ( "
			+ "            SELECT distinct rdg.CF_UTENTE "
			+ "                 FROM referente_delegati_gestore_programma  rdg "
			+ "                 	INNER JOIN programma programma"
			+ "                     	ON rdg.ID_PROGRAMMA = programma.ID"
			+ "                         AND rdg.id_ente = programma.id_ente_gestore_programma"
			+ "                 WHERE programma.POLICY = 'SCD'  "
			+ " "
			+ "               UNION  "
			+ " "
			+ "             SELECT distinct rdgp.CF_UTENTE"
			+ "                 FROM referente_delegati_gestore_progetto rdgp"
			+ "                 INNER JOIN progetto progetto"
			+ "                     ON rdgp.ID_PROGETTO = progetto.ID "
			+ "                     AND rdgp.id_ente = progetto.id_ente_gestore_progetto"
			+ "                 INNER JOIN programma programma"
			+ "                 	ON progetto.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'  "
			+ " "
			+ "               UNION  "
			+ " "
			+ "             SELECT distinct rdp.CF_UTENTE"
			+ "                 FROM referente_delegati_partner rdp"
			+ "                 INNER JOIN ente_partner ep"
			+ "                     ON rdp.ID_PROGETTO = ep.ID_PROGETTO"
			+ "                 INNER JOIN progetto progetto"
			+ "                     ON ep.ID_PROGETTO = progetto.ID"
			+ "                 INNER JOIN programma programma"
			+ "                     ON progetto.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'"
			+ " "
			+ "              UNION "
			+ " "
			+ "              SELECT distinct espf.ID_FACILITATORE"
			+ "                 FROM ente_sede_progetto_facilitatore espf"
			+ "                 INNER JOIN progetto p "
			+ "                 ON espf.ID_PROGETTO = p.ID "
			+ "                 AND espf.id_ente = p.id_ente_gestore_progetto"
			+ "              WHERE espf.RUOLO_UTENTE = 'VOL'"
			+ ""
			+ "              UNION "
			+ ""
			+ "              SELECT distinct espf.ID_FACILITATORE"
			+ "                 FROM ente_sede_progetto_facilitatore espf"
			+ "                 INNER JOIN ente_partner ep "
			+ "                 ON espf.ID_PROGETTO = ep.id_progetto "
			+ "                 AND espf.id_ente = ep.id_ente"
			+ "              WHERE espf.RUOLO_UTENTE = 'VOL'"
			+ "			) AS utenti_per_ruolo  "
			+ "         	INNER JOIN utente utente"
			+ "             	ON utenti_per_ruolo.CF_UTENTE = utente.CODICE_FISCALE"
			+ " "
			+ "             WHERE 1=1"
			+ "                   AND    (    :criterioRicerca IS NULL   "
			+ "                   		   OR CONVERT( utente.ID, CHAR ) = :criterioRicerca  "
			+ "                            OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike )  "
			+ "                            OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike )  "
			+ "                            OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "                      )"
			+ "                	  AND"
			+ "                   ( SELECT distinct u2.id"
			+ "                       FROM utente u2"
			+ "                          LEFT JOIN utente_x_ruolo ur2"
			+ "                             ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "                          LEFT JOIN ruolo ruolo2"
			+ "                             ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "                      WHERE 1=1"
			+ "                          AND u2.id = utente.id"
			+ "                          AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN ( :ruoli) )) = utente.id"
			+ "             ORDER BY utente.cognome"
			+ "             LIMIT :currPageIndex, :pageSize"
			+ "            ) as risultato"
			+ "             INNER JOIN utente_x_ruolo ur"
			+ "                   ON ur.UTENTE_ID = risultato.CODICE_FISCALE"
			+ "             INNER JOIN ruolo ruolo   "
			+ "                   ON ruolo.CODICE = ur.RUOLO_CODICE  ",
			nativeQuery = true)
	public Set<UtenteEntity> findUtentiPerDSCU(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli,
			@Param(value = "currPageIndex") Integer currPageIndex,
			@Param(value = "pageSize")  Integer pageSize
	);

	@Query(value = "SELECT * FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdg.CF_UTENTE "
			+ "			 	FROM referente_delegati_gestore_programma rdg "
			+ "             INNER JOIN programma p"
			+ "              on rdg.id_ente = p.id_ente_gestore_programma "
			+ "              and rdg.id_programma = p.id"
			+ "			 	WHERE rdg.ID_PROGRAMMA = :idProgramma"
			+ "			 		AND rdg.CF_UTENTE != :cfUtente"
			+ "			 UNION "
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "			 	FROM referente_delegati_gestore_progetto rdgp "
			+ "			 	INNER JOIN progetto progetto "
			+ "			 		ON rdgp.ID_PROGETTO = progetto.ID "
			+ "                 AND rdgp.id_ente = progetto.id_ente_gestore_progetto"
			+ "			 	WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "			 UNION "
			+ "			 SELECT distinct rdp.CF_UTENTE "
			+ "			 	FROM referente_delegati_partner rdp "
			+ "			 	INNER JOIN ente_partner ep "
			+ "			 		ON rdp.ID_PROGETTO = ep.ID_PROGETTO "
			+ "			 	INNER JOIN progetto progetto "
			+ "			 		ON ep.ID_PROGETTO = progetto.ID "
			+ "			 	WHERE progetto.ID_PROGRAMMA = :idProgramma "
			+ "           UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "                 AND espf.id_ente = progetto.id_ente_gestore_progetto"
			+ "				WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "           UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN ente_partner p "
			+ "                ON espf.id_ente = p.id_ente "
			+ "                AND espf.id_progetto = p.id_progetto"
			+ "                INNER JOIN progetto progetto"
			+ "                on espf.id_progetto = progetto.id"
			+ "				WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "					AND	 ( :criterioRicerca IS NULL  "
			+ "						OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             			OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             			OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "					   )"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			                        FROM utente u2"
			+ "			                           LEFT JOIN utente_x_ruolo ur2"
			+ "			                              ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                           LEFT JOIN ruolo ruolo2"
			+ "			                              ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                       WHERE 1=1"
			+ "			                           AND u2.id = utente.id"
			+ "			                           AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			      ORDER BY utente.cognome"
			+ "			      LIMIT :currPageIndex, :pageSize"
			+ "               ) as risultato"
			+ "             INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = risultato.CODICE_FISCALE "
			+ "			 	INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE "
			+ "             ORDER BY risultato.cognome", 
			nativeQuery = true)
	public Set<UtenteEntity> findUtentiPerReferenteDelegatoGestoreProgramma(
			@Param(value = "idProgramma") Long idProgramma, 
			@Param(value = "cfUtente")String cfUtente,
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli,
			@Param(value = "currPageIndex") Integer currPageIndex,
			@Param(value = "pageSize")  Integer pageSize
	);

	@Query(value = "SELECT * FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "				FROM referente_delegati_gestore_progetto rdgp"
			+ "			 	INNER JOIN progetto progetto "
			+ "			 	ON rdgp.ID_PROGETTO = progetto.ID "
			+ "             AND rdgp.id_ente = progetto.id_ente_gestore_progetto"
			+ "				WHERE rdgp.CF_UTENTE != :cfUtente "
			+ "					AND rdgp.ID_PROGETTO = :idProgetto"
			+ "			 UNION "
			+ "			 SELECT distinct rdp.CF_UTENTE "
			+ "				FROM referente_delegati_partner rdp "
			+ "				WHERE rdp.ID_PROGETTO = :idProgetto "
			+ "          UNION"
			+ "			 SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "                 AND espf.id_ente = progetto.id_ente_gestore_progetto"
			+ "				WHERE progetto.ID = :idProgetto"
			+ "           UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN ente_partner p "
			+ "                ON espf.id_ente = p.id_ente "
			+ "                AND espf.id_progetto = p.id_progetto"
			+ "             WHERE p.id_progetto = :idProgetto"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "					AND	 ( :criterioRicerca IS NULL  "
			+ "					    OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "						)"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			             	FROM utente u2"
			+ "			                LEFT JOIN utente_x_ruolo ur2"
			+ "			                	ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                LEFT JOIN ruolo ruolo2"
			+ "			                    ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                WHERE 1=1"
			+ "			                    AND u2.id = utente.id"
			+ "			                    AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			              ORDER BY utente.cognome"
			+ "			              LIMIT :currPageIndex, :pageSize"
			+ "                          ) as risultato"
			+ "                    INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = risultato.CODICE_FISCALE "
			+ "			 	    INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE "
			+ "                 ORDER BY risultato.cognome", 
			nativeQuery = true)
	public Set<UtenteEntity> findUtentiPerReferenteDelegatoGestoreProgetti(
			@Param(value = "idProgetto") Long idProgetto,
			@Param(value = "cfUtente")String cfUtente, 
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli,
			@Param(value = "currPageIndex")  Integer currPageIndex,
			@Param(value = "pageSize")  Integer pageSize
	);

	@Query(value = "SELECT * FROM ( "
			+ "	SELECT * FROM ("
			+ "			SELECT distinct rdp.CF_UTENTE "
			+ "				FROM referente_delegati_partner rdp "
			+ "				WHERE rdp.CF_UTENTE != :cfUtente"
			+ "					AND rdp.ID_PROGETTO = :idProgetto"
			+ "                 AND rdp.id_ente = :idEnte"
			+ "           UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN ente_partner p "
			+ "                ON espf.id_ente = p.id_ente "
			+ "                AND espf.id_progetto = p.id_progetto"
			+ "             WHERE p.id_progetto = :idProgetto "
			+ "             AND p.id_ente = :idEnte"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "			   		AND	 ( :criterioRicerca IS NULL  "
			+ "						OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "					  	 )"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			                        FROM utente u2"
			+ "			                           LEFT JOIN utente_x_ruolo ur2"
			+ "			                              ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                           LEFT JOIN ruolo ruolo2"
			+ "			                              ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                       WHERE 1=1"
			+ "			                           AND u2.id = utente.id"
			+ "			                           AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			              ORDER BY utente.cognome"
			+ "			              LIMIT :currPageIndex, :pageSize"
			+ "                          ) as risultato"
			+ "                    INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = risultato.CODICE_FISCALE "
			+ "			 	    INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE"
			+ "                 ORDER BY risultato.cognome",
			nativeQuery = true)
	public Set<UtenteEntity> findUtentiPerReferenteDelegatoEntePartnerProgetti(
			@Param(value = "idProgetto") Long idProgetto,
			@Param(value = "idEnte") Long idEnte,
			@Param(value = "cfUtente")String cfUtente, 
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli,
			@Param(value = "currPageIndex")  Integer currPageIndex,
			@Param(value = "pageSize")  Integer pageSize
	);
	
	@Query(value = " "
			 + "SELECT * "
			 + "	FROM ( "
			 + "          SELECT utente_and_stato.stato_utente as stato"
			 + "    		FROM ( "
			 + "    			SELECT utente.*, case when (SELECT distinct u.ID "
			 + "                	FROM utente u "
			 + "                    	INNER JOIN utente_x_ruolo uxr "
			 + "                        	ON u.codice_fiscale = uxr.utente_id "
			 + "                    WHERE u.id = utente.id ) is null then 'NON ATTIVO' "
			 + "                                else 'ATTIVO' "
			 + "                                end as stato_utente "
			 + "                	FROM "
			 + "                    	utente utente "
			 + "                    WHERE 1=1 "
			 + "         			AND    (     :criterioRicerca IS NULL  "
             + "               			OR CONVERT( utente.ID, CHAR ) = :criterioRicerca "
             + "              			OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
             + "              			OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
             + "              			OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike ) ) "
			 + "                    AND ( "
			 + "						 SELECT distinct u2.id "
			 + "                         	FROM utente u2 "
			 + "                            	LEFT JOIN utente_x_ruolo ur2 "
			 + "                                   ON u2.CODICE_FISCALE = ur2.UTENTE_ID "
			 + "                                LEFT JOIN ruolo ruolo2"
			 + "                                   ON ruolo2.CODICE = ur2.RUOLO_CODICE "
			 + "                            WHERE 1=1 "
			 + "                            	AND u2.id = utente.id "
			 + "                                AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN ( :ruoli) )) = utente.id ) utente_and_stato "
			 + "     WHERE 1=1 "
			 + "     	AND (COALESCE(:stati) IS NULL OR  utente_and_stato.stato_utente in (:stati)) "
			 + "   		 ) as utentiPaginati ",
		nativeQuery = true)
	public Set<String> findStatiByFilter(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike,
			@Param(value = "ruoli") List<String> ruoli,
			@Param(value = "stati") List<String> stati
	);

	@Query(value = " "
			 + "SELECT distinct ruolo.nome "
			 + "	FROM  ("
			 + "    	SELECT utente_and_stato.id,"
			 + "           utente_and_stato.codice_fiscale,"
			 + "           utente_and_stato.cognome,"
			 + "           utente_and_stato.email,"
			 + "           utente_and_stato.nome,"
			 + "           utente_and_stato.stato_utente as stato,"
			 + "           utente_and_stato.telefono,"
			 + "           utente_and_stato.mansione,"
			 + "           utente_and_stato.tipo_contratto,"
			 + "           utente_and_stato.consenso_dati,"
			 + "           utente_and_stato.data_ora_consenso_dati,"
			 + "           utente_and_stato.data_ora_aggiornamento,"
			 + "           utente_and_stato.data_ora_creazione,"
			 + "           utente_and_stato.integrazione"
			 + "    		FROM ( "
			 + "    			SELECT utente.*, case when (SELECT distinct u.ID "
			 + "                	FROM utente u "
			 + "                    	INNER JOIN utente_x_ruolo uxr "
			 + "                        	ON u.codice_fiscale = uxr.utente_id "
			 + "                    WHERE u.id = utente.id ) is null then 'NON ATTIVO' "
			 + "                                else 'ATTIVO' "
			 + "                                end as stato_utente "
			 + "                	FROM "
			 + "                    	utente utente "
			 + "                    WHERE 1=1 "
			 + "         			AND    (     :criterioRicerca IS NULL  "
             + "               			OR CONVERT( utente.ID, CHAR ) = :criterioRicerca "
             + "              			OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
             + "              			OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
             + "              			OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike ) ) "
			 + "                    AND ( "
			 + "						 SELECT distinct u2.id "
			 + "                         	FROM utente u2 "
			 + "                            	LEFT JOIN utente_x_ruolo ur2 "
			 + "                                   ON u2.CODICE_FISCALE = ur2.UTENTE_ID "
			 + "                                LEFT JOIN ruolo ruolo2"
			 + "                                   ON ruolo2.CODICE = ur2.RUOLO_CODICE "
			 + "                            WHERE 1=1 "
			 + "                            	AND u2.id = utente.id "
			 + "                                AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN ( :ruoli) )) = utente.id ) utente_and_stato "
			 + "     WHERE 1=1 "
			 + "     	AND (COALESCE(:stati) IS NULL OR  utente_and_stato.stato_utente in (:stati)) "
			 + "   		ORDER BY utente_and_stato.ID ASC "
			 + "   	 	 ) as utentiPaginati "
			 + "	LEFT JOIN utente_x_ruolo ur"
			 + "    	ON utentiPaginati.CODICE_FISCALE = ur.UTENTE_ID "
			 + "    LEFT JOIN ruolo ruolo "
			 + "        ON ruolo.CODICE = ur.RUOLO_CODICE ",
		nativeQuery = true)
	public List<String> findAllRuoli(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike,  
			@Param(value = "ruoli") List<String> ruoli,
			@Param(value = "stati") List<String> stati
	);

	@Query(value = ""
			+ "SELECT distinct ruolo.nome FROM ( "
			+ "		SELECT * "
			+ "     	FROM ( "
			+ "            SELECT distinct rdg.CF_UTENTE "
			+ "                 FROM referente_delegati_gestore_programma  rdg "
			+ "                 	INNER JOIN programma programma"
			+ "                     	ON rdg.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'  "
			+ " "
			+ "               UNION  "
			+ " "
			+ "             SELECT distinct rdgp.CF_UTENTE"
			+ "                 FROM referente_delegati_gestore_progetto rdgp"
			+ "                 INNER JOIN progetto progetto"
			+ "                     ON rdgp.ID_PROGETTO = progetto.ID"
			+ "                 INNER JOIN programma programma"
			+ "                 	ON progetto.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'  "
			+ " "
			+ "               UNION  "
			+ " "
			+ "             SELECT distinct rdp.CF_UTENTE"
			+ "                 FROM referente_delegati_partner rdp"
			+ "                 INNER JOIN ente_partner ep"
			+ "                     ON rdp.ID_PROGETTO = ep.ID_PROGETTO"
			+ "                 INNER JOIN progetto progetto"
			+ "                     ON ep.ID_PROGETTO = progetto.ID"
			+ "                 INNER JOIN programma programma"
			+ "                     ON progetto.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'"
			+ " "
			+ "              UNION "
			+ " "
			+ "              SELECT distinct espf.ID_FACILITATORE"
			+ "                 FROM ente_sede_progetto_facilitatore espf"
			+ "              WHERE espf.RUOLO_UTENTE = 'VOL'"
			+ "			) AS utenti_per_ruolo  "
			+ "         	INNER JOIN utente utente"
			+ "             	ON utenti_per_ruolo.CF_UTENTE = utente.CODICE_FISCALE"
			+ " "
			+ "             WHERE 1=1"
			+ "                   AND    (    :criterioRicerca IS NULL   "
			+ "                   		   OR CONVERT( utente.ID, CHAR ) = :criterioRicerca  "
			+ "                            OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike )  "
			+ "                            OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike )  "
			+ "                            OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "                      )"
			+ "                	  AND"
			+ "                   ( SELECT distinct u2.id"
			+ "                       FROM utente u2"
			+ "                          LEFT JOIN utente_x_ruolo ur2"
			+ "                             ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "                          LEFT JOIN ruolo ruolo2"
			+ "                             ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "                      WHERE 1=1"
			+ "                          AND u2.id = utente.id"
			+ "                          AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN ( :ruoli) )) = utente.id"
			+ "             ORDER BY utente.id"
			+ "            ) as risultato"
			+ "             INNER JOIN utente_x_ruolo ur"
			+ "                   ON ur.UTENTE_ID = risultato.CODICE_FISCALE"
			+ "             INNER JOIN ruolo ruolo   "
			+ "                   ON ruolo.CODICE = ur.RUOLO_CODICE  ",
			nativeQuery = true)
	public List<String> findRuoliPerDSCU(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike,  
			@Param(value = "ruoli") List<String> ruoli
	);

	@Query(value = "SELECT distinct ruolo.nome FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdg.CF_UTENTE "
			+ "			 	FROM referente_delegati_gestore_programma rdg "
			+ "			 	WHERE rdg.ID_PROGRAMMA = :idProgramma"
			+ "			 		AND rdg.CF_UTENTE != :cfUtente"
			+ "			 UNION "
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "			 	FROM referente_delegati_gestore_progetto rdgp "
			+ "			 	INNER JOIN progetto progetto "
			+ "			 		ON rdgp.ID_PROGETTO = progetto.ID "
			+ "			 	WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "			 UNION "
			+ "			 SELECT distinct rdp.CF_UTENTE "
			+ "			 	FROM referente_delegati_partner rdp "
			+ "			 	INNER JOIN ente_partner ep "
			+ "			 		ON rdp.ID_PROGETTO = ep.ID_PROGETTO "
			+ "			 	INNER JOIN progetto progetto "
			+ "			 		ON ep.ID_PROGETTO = progetto.ID "
			+ "			 	WHERE progetto.ID_PROGRAMMA = :idProgramma "
			+ "             UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "				WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "					AND	 ( :criterioRicerca IS NULL  "
			+ "						OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             			OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             			OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "					   )"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			                        FROM utente u2"
			+ "			                           LEFT JOIN utente_x_ruolo ur2"
			+ "			                              ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                           LEFT JOIN ruolo ruolo2"
			+ "			                              ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                       WHERE 1=1"
			+ "			                           AND u2.id = utente.id"
			+ "			                           AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			      ORDER BY utente.id"
			+ "               ) as risultato"
			+ "             INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = risultato.CODICE_FISCALE "
			+ "			 	INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE", 
			nativeQuery = true)
	public List<String> findRuoliPerReferenteDelegatoGestoreProgramma(
			@Param(value = "idProgramma") Long idProgramma, 
			@Param(value = "cfUtente")String cfUtente,
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli
	);

	@Query(value = "SELECT distinct ruolo.nome FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "				FROM referente_delegati_gestore_progetto rdgp"
			+ "				WHERE rdgp.CF_UTENTE != :cfUtente "
			+ "					AND rdgp.ID_PROGETTO = :idProgetto"
			+ "			 UNION "
			+ "			 SELECT distinct rdp.CF_UTENTE "
			+ "				FROM referente_delegati_partner rdp "
			+ "				WHERE rdp.ID_PROGETTO = :idProgetto "
			+ "          UNION"
			+ "			 SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "				WHERE progetto.ID = :idProgetto"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "					AND	 ( :criterioRicerca IS NULL  "
			+ "					    OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "						)"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			             	FROM utente u2"
			+ "			                LEFT JOIN utente_x_ruolo ur2"
			+ "			                	ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                LEFT JOIN ruolo ruolo2"
			+ "			                    ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                WHERE 1=1"
			+ "			                    AND u2.id = utente.id"
			+ "			                    AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			              ORDER BY utente.id"
			+ "                          ) as risultato"
			+ "                    INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = risultato.CODICE_FISCALE "
			+ "			 	    INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE", 
			nativeQuery = true)
	public List<String> findRuoliPerReferenteDelegatoGestoreProgetti(
			@Param(value = "idProgetto") Long idProgetto, 
			@Param(value = "cfUtente")String cfUtente,
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli
	);

	@Query(value = "SELECT distinct ruolo.nome FROM ( "
			+ "	SELECT * FROM ("
			+ "			SELECT distinct rdp.CF_UTENTE "
			+ "				FROM referente_delegati_partner rdp "
			+ "				WHERE rdp.CF_UTENTE != :cfUtente"
			+ "					AND rdp.ID_PROGETTO = :idProgetto"
			+ "                UNION"
			+ "			 SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "				WHERE progetto.ID = :idProgetto"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "			   		AND	 ( :criterioRicerca IS NULL  "
			+ "						OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "					  	 )"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			                        FROM utente u2"
			+ "			                           LEFT JOIN utente_x_ruolo ur2"
			+ "			                              ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                           LEFT JOIN ruolo ruolo2"
			+ "			                              ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                       WHERE 1=1"
			+ "			                           AND u2.id = utente.id"
			+ "			                           AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			              ORDER BY utente.id"
			+ "                      ) as risultato"
			+ "                    INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = risultato.CODICE_FISCALE "
			+ "			 	    INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE",
			nativeQuery = true)
	public List<String> findRuoliPerReferenteDelegatoEntePartnerProgetti(
			@Param(value = "idProgetto") Long idProgetto,
			@Param(value = "cfUtente")String cfUtente,
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli
	);

	@Query(value = ""
			+ " SELECT "
			+ "		*  "
			+ " FROM   "
			+ "		utente "
			+ "	WHERE 1=1  "
			+ "		AND (   "
			+ "			   CONVERT( utente.ID, CHAR ) = :criterioRicerca ) "
		    + "	    	   OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
            + "			   OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
            + "			   OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike "
            + "		) "
            + "    ORDER BY cognome", 
			nativeQuery = true)
	public List<UtenteEntity> findUtenteByCriterioRicerca(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike
	);

	public Optional<UtenteEntity> findByEmailAndCodiceFiscaleNot(String email, String codiceFiscale);
	public Optional<UtenteEntity> findByEmailAndIdNot(String email, Long id);

	@Query(value = " "
			 + "SELECT count(*) "
			 + "	FROM  ("
			 + "SELECT distinct id "
			 + "	FROM  ("
			 + "    	SELECT utente_and_stato.id,"
			 + "           utente_and_stato.codice_fiscale,"
			 + "           utente_and_stato.cognome,"
			 + "           utente_and_stato.email,"
			 + "           utente_and_stato.nome,"
			 + "           utente_and_stato.stato_utente as stato,"
			 + "           utente_and_stato.telefono,"
			 + "           utente_and_stato.mansione,"
			 + "           utente_and_stato.tipo_contratto,"
			 + "           utente_and_stato.consenso_dati,"
			 + "           utente_and_stato.data_ora_consenso_dati,"
			 + "           utente_and_stato.data_ora_aggiornamento,"
			 + "           utente_and_stato.data_ora_creazione,"
			 + "           utente_and_stato.integrazione,"
			 + "           utente_and_stato.immagine_profilo"
			 + "    		FROM ( "
			 + "    			SELECT utente.*, case when (SELECT distinct u.ID "
			 + "                	FROM utente u "
			 + "                    	INNER JOIN  "
			 + "                        ( "
			 + "                          select "
			 + "                          distinct uxr.*          "
			 + "                          from "
			 + "                          utente_x_ruolo uxr          "
			 + "                          inner join "
			 + "                          referente_delegati_gestore_programma  rdgp          "
			 + "                          on uxr.utente_id = rdgp.cf_utente          "
			 + "                          and uxr.ruolo_codice = rdgp.codice_ruolo          "
			 + "                          inner join "
			 + "                          programma p          "
			 + "                          on rdgp.id_ente = p.id_ente_gestore_programma          "
			 + "                          and rdgp.id_programma = p.id                                                               "
			 + "                        UNION "
			 + "                          select "
			 + "                          distinct uxr.*  "
			 + "                          from "
			 + "                          utente_x_ruolo uxr          "
			 + "                          inner join "
			 + "                          referente_delegati_gestore_progetto rdgpr          "
			 + "                           on uxr.utente_id = rdgpr.cf_utente          "
			 + "                           and uxr.ruolo_codice = rdgpr.codice_ruolo          "
			 + "                          inner join "
			 + "                          progetto p          "
			 + "                          on rdgpr.id_ente = p.id_ente_gestore_progetto          "
			 + "                          and rdgpr.id_progetto = p.id                                                               "
			 + "                       UNION "
			 + "                          select "
			 + "                          distinct uxr.*  "
			 + "                          from "
			 + "                          utente_x_ruolo uxr          "
			 + "                          inner join "
			 + "                          referente_delegati_partner rdp          "
			 + "                          on uxr.utente_id = rdp.cf_utente          "
			 + "                          and uxr.ruolo_codice = rdp.codice_ruolo                                      "
			 + "                       UNION "
			 + "                          select "
			 + "                          distinct uxr.*  "
			 + "                          from "
			 + "                          utente_x_ruolo uxr          "
			 + "                          inner join "
			 + "                          ente_sede_progetto_facilitatore espf          "
			 + "                          on uxr.utente_id = espf.id_facilitatore          "
			 + "                           and uxr.ruolo_codice = espf.ruolo_utente          "
			 + "                          inner join "
			 + "                          progetto p          "
			 + "                          on espf.id_ente = p.id_ente_gestore_progetto          "
			 + "                          and espf.id_progetto = p.id                                                                "
			 + "                        UNION "
			 + "                          select "
			 + "                          distinct uxr.*  "
			 + "                          from "
			 + "                          utente_x_ruolo uxr          "
			 + "                           inner join "
			 + "                          ente_sede_progetto_facilitatore espf          "
			 + "                          on uxr.utente_id = espf.id_facilitatore          "
			 + "                          and uxr.ruolo_codice = espf.ruolo_utente          "
			 + "                          inner join "
			 + "                          ente_partner p          "
			 + "                          on espf.id_ente = p.id_ente          "
			 + "                          and espf.id_progetto = p.id_progetto                                                              "
			 + "                        UNION "
			 + "                          select "
			 + "                          distinct uxr.*  "
			 + "                          from "
			 + "                          utente_x_ruolo uxr          "
			 + "                          where "
			 + "                          uxr.ruolo_codice not in ( "
			 + "                               'REG', 'DEG','REGP', 'DEGP', 'REPP', 'DEPP', 'FAC', 'VOL' "
			 + "                           )           "
			 + "            )"
			 + "                    uxr "
			 + "                        	ON u.codice_fiscale = uxr.utente_id "
			 + "                    WHERE u.id = utente.id ) is null then 'NON ATTIVO' "
			 + "                                else 'ATTIVO' "
			 + "                                end as stato_utente "
			 + "                	FROM "
			 + "                    	utente utente "
			 + "                    WHERE 1=1 "
			 + "         			AND    (     :criterioRicerca IS NULL  "
             + "               			OR CONVERT( utente.ID, CHAR ) = :criterioRicerca "
             + "              			OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
             + "              			OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
             + "                        OR concat(UPPER( utente.COGNOME ), ' ' , UPPER( utente.NOME ))  = UPPER(:criterioRicerca) "
             + "              			OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike ) ) "
			 + "                    AND ( "
			 + "						 SELECT distinct u2.id "
			 + "                         	FROM utente u2 "
			 + "                            	LEFT JOIN  "
			 + "                                   (  "
			 + "												select distinct uxr.*  "
			 + "												  from utente_x_ruolo uxr  "
			 + "												  inner join referente_delegati_gestore_programma rdgp  "
			 + "												  on uxr.utente_id = rdgp.cf_utente  "
			 + "												  and uxr.ruolo_codice = rdgp.codice_ruolo  "
			 + "												  inner join programma p  "
			 + "												  on rdgp.id_ente = p.id_ente_gestore_programma  "
			 + "												  and rdgp.id_programma = p.id  "
			 + "																							    "
			 + "												  UNION  "
			 + "																							    "
			 + "												  select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  inner join referente_delegati_gestore_progetto rdgpr  "
			 + "												  on uxr.utente_id = rdgpr.cf_utente  "
			 + "												  and uxr.ruolo_codice = rdgpr.codice_ruolo  "
			 + "												  inner join progetto p  "
			 + "												  on rdgpr.id_ente = p.id_ente_gestore_progetto  "
			 + "												  and rdgpr.id_progetto = p.id  "
			 + "																							    "
			 + "												  UNION  "
			 + "																							    "
			 + "												  select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  inner join referente_delegati_partner rdp  "
			 + "												  on uxr.utente_id = rdp.cf_utente  "
			 + "												  and uxr.ruolo_codice = rdp.codice_ruolo  "
			 + "																	   "
			 + "												  UNION  "
			 + "																							    "
			 + "												  select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  inner join ente_sede_progetto_facilitatore espf  "
			 + "												  on uxr.utente_id = espf.id_facilitatore  "
			 + "												  and uxr.ruolo_codice = espf.ruolo_utente  "
			 + "												  inner join progetto p  "
			 + "												  on espf.id_ente = p.id_ente_gestore_progetto  "
			 + "												  and espf.id_progetto = p.id  "
			 + "																								 "
			 + "												  UNION  "
			 + "																							    "
			 + "												select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  inner join ente_sede_progetto_facilitatore espf  "
			 + "												  on uxr.utente_id = espf.id_facilitatore  "
			 + "												  and uxr.ruolo_codice = espf.ruolo_utente  "
			 + "												  inner join ente_partner p  "
			 + "												  on espf.id_ente = p.id_ente  "
			 + "												  and espf.id_progetto = p.id_progetto  "
			 + "																							   "
			 + "												  UNION  "
			 + "																							    "
			 + "												  select distinct uxr.* from   "
			 + "												  utente_x_ruolo uxr  "
			 + "												  where uxr.ruolo_codice not in ('REG', 'DEG','REGP', 'DEGP', 'REPP', 'DEPP', 'FAC', 'VOL') "
			 + "												   )                       "
			 + "                                   ur2 "
			 + "                                   ON u2.CODICE_FISCALE = ur2.UTENTE_ID "
			 + "                                LEFT JOIN ruolo ruolo2"
			 + "                                   ON ruolo2.CODICE = ur2.RUOLO_CODICE "
			 + "                            WHERE 1=1 "
			 + "                            	AND u2.id = utente.id "
			 + "                                AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN ( :ruoli) )) = utente.id ) utente_and_stato "
			 + "     WHERE 1=1 "
			 + "     	AND (COALESCE(:stati) IS NULL OR  utente_and_stato.stato_utente in (:stati)) "
			 + "   		ORDER BY utente_and_stato.ID ASC "
			 + "   	 	 ) as utentiPaginati "
			 + "	LEFT JOIN "
			 + "    ( "
			 + "		select distinct uxr.* "
			 + "        from utente_x_ruolo uxr "
			 + "        inner join referente_delegati_gestore_programma rdgp "
			 + "        on uxr.utente_id = rdgp.cf_utente "
			 + "        and uxr.ruolo_codice = rdgp.codice_ruolo "
			 + "        inner join programma p "
			 + "        on rdgp.id_ente = p.id_ente_gestore_programma "
			 + "        and rdgp.id_programma = p.id "
			 + "                                                     "
			 + "        UNION "
			 + "                                                     "
			 + "        select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        inner join referente_delegati_gestore_progetto rdgpr "
			 + "        on uxr.utente_id = rdgpr.cf_utente "
			 + "        and uxr.ruolo_codice = rdgpr.codice_ruolo "
			 + "        inner join progetto p "
			 + "        on rdgpr.id_ente = p.id_ente_gestore_progetto "
			 + "        and rdgpr.id_progetto = p.id "
			 + "                                                     "
			 + "        UNION "
			 + "                                                     "
			 + "        select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        inner join referente_delegati_partner rdp "
			 + "        on uxr.utente_id = rdp.cf_utente "
			 + "        and uxr.ruolo_codice = rdp.codice_ruolo "
			 + "                            "
			 + "        UNION "
			 + "                                                     "
			 + "        select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        inner join ente_sede_progetto_facilitatore espf "
			 + "        on uxr.utente_id = espf.id_facilitatore "
			 + "        and uxr.ruolo_codice = espf.ruolo_utente "
			 + "        inner join progetto p "
			 + "        on espf.id_ente = p.id_ente_gestore_progetto "
			 + "        and espf.id_progetto = p.id "
			 + "                                                      "
			 + "        UNION "
			 + "                                                     "
			 + "		select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        inner join ente_sede_progetto_facilitatore espf "
			 + "        on uxr.utente_id = espf.id_facilitatore "
			 + "        and uxr.ruolo_codice = espf.ruolo_utente "
			 + "        inner join ente_partner p "
			 + "        on espf.id_ente = p.id_ente "
			 + "        and espf.id_progetto = p.id_progetto "
			 + "                                                    "
			 + "        UNION "
			 + "                                                     "
			 + "        select distinct uxr.* from  "
			 + "        utente_x_ruolo uxr "
			 + "        where uxr.ruolo_codice not in ('REG', 'DEG','REGP', 'DEGP', 'REPP', 'DEPP', 'FAC', 'VOL') "
			 + "         ) as ruoli"
			 + "    	ON utentiPaginati.CODICE_FISCALE = ruoli.UTENTE_ID "
			 + "    LEFT JOIN ruolo ruolo "
			 + "        ON ruolo.CODICE = ruoli.RUOLO_CODICE "
			 + "   	 ) as utentiPaginati ",
		nativeQuery = true)
	public int countUtentiTrovati(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike,
			@Param(value = "ruoli") List<String> ruoli,
			@Param(value = "stati") List<String> stati);

	@Query(value = ""
			+ "SELECT count(*) FROM ( "
			+ "SELECT distinct id FROM ( "
			+ "		SELECT * "
			+ "     	FROM ( "
			+ "            SELECT distinct rdg.CF_UTENTE "
			+ "                 FROM referente_delegati_gestore_programma  rdg "
			+ "                 	INNER JOIN programma programma"
			+ "                     	ON rdg.ID_PROGRAMMA = programma.ID"
			+ "                         AND rdg.id_ente = programma.id_ente_gestore_programma"
			+ "                 WHERE programma.POLICY = 'SCD'  "
			+ " "
			+ "               UNION  "
			+ " "
			+ "             SELECT distinct rdgp.CF_UTENTE"
			+ "                 FROM referente_delegati_gestore_progetto rdgp"
			+ "                 INNER JOIN progetto progetto"
			+ "                     ON rdgp.ID_PROGETTO = progetto.ID "
			+ "                     AND rdgp.id_ente = progetto.id_ente_gestore_progetto"
			+ "                 INNER JOIN programma programma"
			+ "                 	ON progetto.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'  "
			+ " "
			+ "               UNION  "
			+ " "
			+ "             SELECT distinct rdp.CF_UTENTE"
			+ "                 FROM referente_delegati_partner rdp"
			+ "                 INNER JOIN ente_partner ep"
			+ "                     ON rdp.ID_PROGETTO = ep.ID_PROGETTO"
			+ "                 INNER JOIN progetto progetto"
			+ "                     ON ep.ID_PROGETTO = progetto.ID"
			+ "                 INNER JOIN programma programma"
			+ "                     ON progetto.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'"
			+ " "
			+ "              UNION "
			+ " "
			+ "              SELECT distinct espf.ID_FACILITATORE"
			+ "                 FROM ente_sede_progetto_facilitatore espf"
			+ "                 INNER JOIN progetto p "
			+ "                 ON espf.ID_PROGETTO = p.ID "
			+ "                 AND espf.id_ente = p.id_ente_gestore_progetto"
			+ "              WHERE espf.RUOLO_UTENTE = 'VOL'"
			+ ""
			+ "              UNION "
			+ ""
			+ "              SELECT distinct espf.ID_FACILITATORE"
			+ "                 FROM ente_sede_progetto_facilitatore espf"
			+ "                 INNER JOIN ente_partner ep "
			+ "                 ON espf.ID_PROGETTO = ep.id_progetto "
			+ "                 AND espf.id_ente = ep.id_ente"
			+ "              WHERE espf.RUOLO_UTENTE = 'VOL'"
			+ "			) AS utenti_per_ruolo  "
			+ "         	INNER JOIN utente utente"
			+ "             	ON utenti_per_ruolo.CF_UTENTE = utente.CODICE_FISCALE"
			+ " "
			+ "             WHERE 1=1"
			+ "                   AND    (    :criterioRicerca IS NULL   "
			+ "                   		   OR CONVERT( utente.ID, CHAR ) = :criterioRicerca  "
			+ "                            OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike )  "
			+ "                            OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike )  "
			+ "                            OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "                      )"
			+ "                	  AND"
			+ "                   ( SELECT distinct u2.id"
			+ "                       FROM utente u2"
			+ "                          LEFT JOIN utente_x_ruolo ur2"
			+ "                             ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "                          LEFT JOIN ruolo ruolo2"
			+ "                             ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "                      WHERE 1=1"
			+ "                          AND u2.id = utente.id"
			+ "                          AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN ( :ruoli) )) = utente.id"
			+ "             ORDER BY utente.id"
			+ "            ) as r"
			+ "             INNER JOIN utente_x_ruolo ur"
			+ "                   ON ur.UTENTE_ID = r.CODICE_FISCALE"
			+ "             INNER JOIN ruolo ruolo   "
			+ "                   ON ruolo.CODICE = ur.RUOLO_CODICE  "
			+ "            ) as risultato",
			nativeQuery = true)
	public int countUtentiTrovatiPerDSCU(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike,
			@Param(value = "ruoli") List<String> ruoli);

	@Query(value = "SELECT count(*) FROM ( "
			+ "SELECT distinct id FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdg.CF_UTENTE "
			+ "			 	FROM referente_delegati_gestore_programma rdg "
			+ "             INNER JOIN programma p"
			+ "              on rdg.id_ente = p.id_ente_gestore_programma "
			+ "              and rdg.id_programma = p.id"
			+ "			 	WHERE rdg.ID_PROGRAMMA = :idProgramma"
			+ "			 		AND rdg.CF_UTENTE != :cfUtente"
			+ "			 UNION "
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "			 	FROM referente_delegati_gestore_progetto rdgp "
			+ "			 	INNER JOIN progetto progetto "
			+ "			 		ON rdgp.ID_PROGETTO = progetto.ID "
			+ "                 AND rdgp.id_ente = progetto.id_ente_gestore_progetto"
			+ "			 	WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "			 UNION "
			+ "			 SELECT distinct rdp.CF_UTENTE "
			+ "			 	FROM referente_delegati_partner rdp "
			+ "			 	INNER JOIN ente_partner ep "
			+ "			 		ON rdp.ID_PROGETTO = ep.ID_PROGETTO "
			+ "			 	INNER JOIN progetto progetto "
			+ "			 		ON ep.ID_PROGETTO = progetto.ID "
			+ "			 	WHERE progetto.ID_PROGRAMMA = :idProgramma "
			+ "           UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "                 AND espf.id_ente = progetto.id_ente_gestore_progetto"
			+ "				WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "           UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN ente_partner p "
			+ "                ON espf.id_ente = p.id_ente "
			+ "                AND espf.id_progetto = p.id_progetto"
			+ "                INNER JOIN progetto progetto"
			+ "                on espf.id_progetto = progetto.id"
			+ "				WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "					AND	 ( :criterioRicerca IS NULL  "
			+ "						OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             			OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             			OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "					   )"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			                        FROM utente u2"
			+ "			                           LEFT JOIN utente_x_ruolo ur2"
			+ "			                              ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                           LEFT JOIN ruolo ruolo2"
			+ "			                              ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                       WHERE 1=1"
			+ "			                           AND u2.id = utente.id"
			+ "			                           AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			      ORDER BY utente.id"
			+ "               ) as r"
			+ "             INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = r.CODICE_FISCALE "
			+ "			 	INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE"
			+ "               ) as risultato",
			nativeQuery = true)
	public int countUtentiTrovatiPerReferenteDelegatoGestoreProgramma(
			@Param(value = "idProgramma") Long idProgramma, 
			@Param(value = "cfUtente")String cfUtente,
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli);

	@Query(value = "SELECT count(*) FROM ( "
			+ "SELECT distinct id FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdg.CF_UTENTE "
			+ "			 	FROM referente_delegati_gestore_programma rdg "
			+ "             INNER JOIN programma p"
			+ "              on rdg.id_ente = p.id_ente_gestore_programma "
			+ "              and rdg.id_programma = p.id"
			+ "				WHERE rdg.ID_PROGRAMMA = :idProgramma"
			+ "			 UNION "
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "				FROM referente_delegati_gestore_progetto rdgp"
			+ "			 	INNER JOIN progetto progetto "
			+ "			 	ON rdgp.ID_PROGETTO = progetto.ID "
			+ "             AND rdgp.id_ente = progetto.id_ente_gestore_progetto"
			+ "				WHERE rdgp.CF_UTENTE != :cfUtente "
			+ "					AND rdgp.ID_PROGETTO = :idProgetto"
			+ "			 UNION "
			+ "			 SELECT distinct rdp.CF_UTENTE "
			+ "				FROM referente_delegati_partner rdp "
			+ "				WHERE rdp.ID_PROGETTO = :idProgetto "
			+ "          UNION"
			+ "			 SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "                 AND espf.id_ente = progetto.id_ente_gestore_progetto"
			+ "				WHERE progetto.ID = :idProgetto"
			+ "           UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN ente_partner p "
			+ "                ON espf.id_ente = p.id_ente "
			+ "                AND espf.id_progetto = p.id_progetto"
			+ "             WHERE p.id_progetto = :idProgetto"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "					AND	 ( :criterioRicerca IS NULL  "
			+ "					    OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "						)"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			             	FROM utente u2"
			+ "			                LEFT JOIN utente_x_ruolo ur2"
			+ "			                	ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                LEFT JOIN ruolo ruolo2"
			+ "			                    ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                WHERE 1=1"
			+ "			                    AND u2.id = utente.id"
			+ "			                    AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			              ORDER BY utente.id"
			+ "                          ) as r"
			+ "                    INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = r.CODICE_FISCALE "
			+ "			 	    INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE"
			+ "                          ) as risultato",
			nativeQuery = true)
	public int countUtentiTrovatiPerReferenteDelegatoGestoreProgetti(
			@Param(value = "idProgramma") Long idProgramma, 
			@Param(value = "idProgetto") Long idProgetto,
			@Param(value = "cfUtente")String cfUtente,
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli);

	@Query(value = "SELECT count(*) FROM ( "
			+ "SELECT distinct id FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdg.CF_UTENTE"
			+ "				FROM referente_delegati_gestore_programma rdg"
			+ "             INNER JOIN programma p"
			+ "              on rdg.id_ente = p.id_ente_gestore_programma "
			+ "              and rdg.id_programma = p.id"
			+ "				WHERE rdg.ID_PROGRAMMA = :idProgramma "
			+ "			 UNION "
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "				FROM referente_delegati_gestore_progetto rdgp "
			+ "			 	INNER JOIN progetto progetto "
			+ "			 	ON rdgp.ID_PROGETTO = progetto.ID "
			+ "             AND rdgp.id_ente = progetto.id_ente_gestore_progetto"
			+ "				WHERE rdgp.ID_PROGETTO = :idProgetto"
			+ "			 UNION "
			+ "			SELECT distinct rdp.CF_UTENTE "
			+ "				FROM referente_delegati_partner rdp "
			+ "				WHERE rdp.CF_UTENTE != :cfUtente"
			+ "					AND rdp.ID_PROGETTO = :idProgetto"
			+ "                 AND rdp.id_ente = :idEnte"
			+ "           UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN ente_partner p "
			+ "                ON espf.id_ente = p.id_ente "
			+ "                AND espf.id_progetto = p.id_progetto"
			+ "             WHERE p.id_progetto = :idProgetto "
			+ "             AND p.id_ente = :idEnte"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "			   		AND	 ( :criterioRicerca IS NULL  "
			+ "						OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "					  	 )"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			                        FROM utente u2"
			+ "			                           LEFT JOIN utente_x_ruolo ur2"
			+ "			                              ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                           LEFT JOIN ruolo ruolo2"
			+ "			                              ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                       WHERE 1=1"
			+ "			                           AND u2.id = utente.id"
			+ "			                           AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			              ORDER BY utente.id"
			+ "                          ) as r"
			+ "                    INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = r.CODICE_FISCALE "
			+ "			 	    INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE"
			+ "                          ) as risultato",
			nativeQuery = true)
	public int countUtentiTrovatiPerReferenteDelegatoEntePartnerProgetti(
			@Param(value = "idProgramma") Long idProgramma, 
			@Param(value = "idProgetto") Long idProgetto,
			@Param(value = "idEnte") Long idEnte,
			@Param(value = "cfUtente")String cfUtente,
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli);

	@Query(value = " "
			 + "SELECT * "
			 + "	FROM  ("
			 + "    	SELECT utente_and_stato.id,"
			 + "           utente_and_stato.codice_fiscale,"
			 + "           utente_and_stato.cognome,"
			 + "           utente_and_stato.email,"
			 + "           utente_and_stato.nome,"
			 + "           utente_and_stato.stato_utente as stato,"
			 + "           utente_and_stato.telefono,"
			 + "           utente_and_stato.mansione,"
			 + "           utente_and_stato.tipo_contratto,"
			 + "           utente_and_stato.consenso_dati,"
			 + "           utente_and_stato.data_ora_consenso_dati,"
			 + "           utente_and_stato.data_ora_aggiornamento,"
			 + "           utente_and_stato.data_ora_creazione,"
			 + "           utente_and_stato.integrazione,"
			 + "		   utente_and_stato.immagine_profilo"
			 + "    		FROM ( "
			 + "    			SELECT utente.*, case when (SELECT distinct u.ID "
			 + "                	FROM utente u "
			 + "                    	INNER JOIN utente_x_ruolo uxr "
			 + "                        	ON u.codice_fiscale = uxr.utente_id "
			 + "                    WHERE u.id = utente.id ) is null then 'NON ATTIVO' "
			 + "                                else 'ATTIVO' "
			 + "                                end as stato_utente "
			 + "                	FROM "
			 + "                    	utente utente "
			 + "                    WHERE 1=1 "
			 + "         			AND    (     :criterioRicerca IS NULL  "
            + "               			OR CONVERT( utente.ID, CHAR ) = :criterioRicerca "
            + "              			OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
            + "              			OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
            + "              			OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike ) ) "
			 + "                    AND ( "
			 + "						 SELECT distinct u2.id "
			 + "                         	FROM utente u2 "
			 + "                            	LEFT JOIN utente_x_ruolo ur2 "
			 + "                                   ON u2.CODICE_FISCALE = ur2.UTENTE_ID "
			 + "                                LEFT JOIN ruolo ruolo2"
			 + "                                   ON ruolo2.CODICE = ur2.RUOLO_CODICE "
			 + "                            WHERE 1=1 "
			 + "                            	AND u2.id = utente.id "
			 + "                                AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN ( :ruoli) )) = utente.id ) utente_and_stato "
			 + "     WHERE 1=1 "
			 + "     	AND (COALESCE(:stati) IS NULL OR  utente_and_stato.stato_utente in (:stati)) "
			 + "   		ORDER BY utente_and_stato.ID ASC "
			 + "   	 	) as utentiPaginati "
			 + "	LEFT JOIN utente_x_ruolo ur"
			 + "    	ON utentiPaginati.CODICE_FISCALE = ur.UTENTE_ID "
			 + "    LEFT JOIN ruolo ruolo "
			 + "        ON ruolo.CODICE = ur.RUOLO_CODICE ",
		nativeQuery = true)
	public Set<UtenteEntity> findUtentiByFiltriPerDownload(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike,
			@Param(value = "ruoli") List<String> ruoli,
			@Param(value = "stati") List<String> stati);

	@Query(value = ""
			+ "SELECT * FROM ( "
			+ "		SELECT * "
			+ "     	FROM ( "
			+ "            SELECT distinct rdg.CF_UTENTE "
			+ "                 FROM referente_delegati_gestore_programma  rdg "
			+ "                 	INNER JOIN programma programma"
			+ "                     	ON rdg.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'  "
			+ " "
			+ "               UNION  "
			+ " "
			+ "             SELECT distinct rdgp.CF_UTENTE"
			+ "                 FROM referente_delegati_gestore_progetto rdgp"
			+ "                 INNER JOIN progetto progetto"
			+ "                     ON rdgp.ID_PROGETTO = progetto.ID"
			+ "                 INNER JOIN programma programma"
			+ "                 	ON progetto.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'  "
			+ " "
			+ "               UNION  "
			+ " "
			+ "             SELECT distinct rdp.CF_UTENTE"
			+ "                 FROM referente_delegati_partner rdp"
			+ "                 INNER JOIN ente_partner ep"
			+ "                     ON rdp.ID_PROGETTO = ep.ID_PROGETTO"
			+ "                 INNER JOIN progetto progetto"
			+ "                     ON ep.ID_PROGETTO = progetto.ID"
			+ "                 INNER JOIN programma programma"
			+ "                     ON progetto.ID_PROGRAMMA = programma.ID"
			+ "                 WHERE programma.POLICY = 'SCD'"
			+ " "
			+ "              UNION "
			+ " "
			+ "              SELECT distinct espf.ID_FACILITATORE"
			+ "                 FROM ente_sede_progetto_facilitatore espf"
			+ "              WHERE espf.RUOLO_UTENTE = 'VOL'"
			+ "			) AS utenti_per_ruolo  "
			+ "         	INNER JOIN utente utente"
			+ "             	ON utenti_per_ruolo.CF_UTENTE = utente.CODICE_FISCALE"
			+ " "
			+ "             WHERE 1=1"
			+ "                   AND    (    :criterioRicerca IS NULL   "
			+ "                   		   OR CONVERT( utente.ID, CHAR ) = :criterioRicerca  "
			+ "                            OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike )  "
			+ "                            OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike )  "
			+ "                            OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "                      )"
			+ "                	  AND"
			+ "                   ( SELECT distinct u2.id"
			+ "                       FROM utente u2"
			+ "                          LEFT JOIN utente_x_ruolo ur2"
			+ "                             ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "                          LEFT JOIN ruolo ruolo2"
			+ "                             ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "                      WHERE 1=1"
			+ "                          AND u2.id = utente.id"
			+ "                          AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN ( :ruoli) )) = utente.id"
			+ "             ORDER BY utente.id"
			+ "            ) as risultato"
			+ "             INNER JOIN utente_x_ruolo ur"
			+ "                   ON ur.UTENTE_ID = risultato.CODICE_FISCALE"
			+ "             INNER JOIN ruolo ruolo   "
			+ "                   ON ruolo.CODICE = ur.RUOLO_CODICE  ",
			nativeQuery = true)
	public Set<UtenteEntity> findUtentiPerDSCUPerDownload(
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli);

	@Query(value = "SELECT * FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdg.CF_UTENTE "
			+ "			 	FROM referente_delegati_gestore_programma rdg "
			+ "			 	WHERE rdg.ID_PROGRAMMA = :idProgramma"
			+ "			 		AND rdg.CF_UTENTE != :cfUtente"
			+ "			 UNION "
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "			 	FROM referente_delegati_gestore_progetto rdgp "
			+ "			 	INNER JOIN progetto progetto "
			+ "			 		ON rdgp.ID_PROGETTO = progetto.ID "
			+ "			 	WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "			 UNION "
			+ "			 SELECT distinct rdp.CF_UTENTE "
			+ "			 	FROM referente_delegati_partner rdp "
			+ "			 	INNER JOIN ente_partner ep "
			+ "			 		ON rdp.ID_PROGETTO = ep.ID_PROGETTO "
			+ "			 	INNER JOIN progetto progetto "
			+ "			 		ON ep.ID_PROGETTO = progetto.ID "
			+ "			 	WHERE progetto.ID_PROGRAMMA = :idProgramma "
			+ "             UNION"
			+ "             SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "				WHERE progetto.ID_PROGRAMMA = :idProgramma"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "					AND	 ( :criterioRicerca IS NULL  "
			+ "						OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             			OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             			OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "					   )"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			                        FROM utente u2"
			+ "			                           LEFT JOIN utente_x_ruolo ur2"
			+ "			                              ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                           LEFT JOIN ruolo ruolo2"
			+ "			                              ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                       WHERE 1=1"
			+ "			                           AND u2.id = utente.id"
			+ "			                           AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			      ORDER BY utente.id"
			+ "               ) as risultato"
			+ "             INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = risultato.CODICE_FISCALE "
			+ "			 	INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE", 
			nativeQuery = true)
	public Set<UtenteEntity> findUtentiPerReferenteDelegatoGestoreProgrammaPerDownload(
			@Param(value = "idProgramma") Long idProgramma, 
			@Param(value = "cfUtente")String cfUtente,
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli);

	@Query(value = "SELECT * FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdg.CF_UTENTE "
			+ "			   FROM referente_delegati_gestore_programma rdg "
			+ "				WHERE rdg.ID_PROGRAMMA = :idProgramma"
			+ "			 UNION "
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "				FROM referente_delegati_gestore_progetto rdgp"
			+ "				WHERE rdgp.CF_UTENTE != :cfUtente "
			+ "					AND rdgp.ID_PROGETTO = :idProgetto"
			+ "			 UNION "
			+ "			 SELECT distinct rdp.CF_UTENTE "
			+ "				FROM referente_delegati_partner rdp "
			+ "				WHERE rdp.ID_PROGETTO = :idProgetto "
			+ "          UNION"
			+ "			 SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "				WHERE progetto.ID = :idProgetto"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "					AND	 ( :criterioRicerca IS NULL  "
			+ "					    OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "						)"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			             	FROM utente u2"
			+ "			                LEFT JOIN utente_x_ruolo ur2"
			+ "			                	ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                LEFT JOIN ruolo ruolo2"
			+ "			                    ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                WHERE 1=1"
			+ "			                    AND u2.id = utente.id"
			+ "			                    AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			              ORDER BY utente.id"
			+ "                          ) as risultato"
			+ "                    INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = risultato.CODICE_FISCALE "
			+ "			 	    INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE", 
			nativeQuery = true)
	public Set<UtenteEntity> findUtentiPerReferenteDelegatoGestoreProgettiPerDownload(
			@Param(value = "idProgramma") Long idProgramma,
			@Param(value = "idProgetto") Long idProgetto,
			@Param(value = "cfUtente")String cfUtente, 
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli);

	@Query(value = "SELECT * FROM ( "
			+ "	SELECT * FROM ("
			+ "			 SELECT distinct rdg.CF_UTENTE"
			+ "				FROM referente_delegati_gestore_programma rdg"
			+ "				WHERE rdg.ID_PROGRAMMA = :idProgramma "
			+ "			 UNION "
			+ "			 SELECT distinct rdgp.CF_UTENTE "
			+ "				FROM referente_delegati_gestore_progetto rdgp "
			+ "				WHERE rdgp.ID_PROGETTO = :idProgetto"
			+ "			 UNION "
			+ "			SELECT distinct rdp.CF_UTENTE "
			+ "				FROM referente_delegati_partner rdp "
			+ "				WHERE rdp.CF_UTENTE != :cfUtente"
			+ "					AND rdp.ID_PROGETTO = :idProgetto"
			+ "					AND rdp.ID_ENTE = :idEnte"
			+ "                UNION"
			+ "			 SELECT distinct espf.id_facilitatore"
			+ "                FROM ente_sede_progetto_facilitatore espf"
			+ "                INNER JOIN progetto progetto"
			+ "					ON espf.ID_PROGETTO = progetto.ID"
			+ "				WHERE progetto.ID = :idProgetto"
			+ "					AND espf.ID_ENTE = :idEnte"
			+ "                )"
			+ "			 	AS utenti_per_ruolo "
			+ "			 	INNER JOIN utente utente "
			+ "			 		ON utenti_per_ruolo.CF_UTENTE = utente.codice_fiscale"
			+ "			 	 "
			+ "			 	WHERE 1 = 1 "
			+ "			   		AND	 ( :criterioRicerca IS NULL  "
			+ "						OR CONVERT(utente.ID, CHAR) = :criterioRicerca "
			+ "	         	        OR UPPER( utente.NOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.COGNOME ) LIKE UPPER( :criterioRicercaLike ) "
			+ "             		OR UPPER( utente.CODICE_FISCALE ) LIKE UPPER( :criterioRicercaLike )"
			+ "					  	 )"
			+ "			 		AND  "
			+ "                    ( SELECT distinct u2.id"
			+ "			                        FROM utente u2"
			+ "			                           LEFT JOIN utente_x_ruolo ur2"
			+ "			                              ON u2.CODICE_FISCALE = ur2.UTENTE_ID"
			+ "			                           LEFT JOIN ruolo ruolo2"
			+ "			                              ON ruolo2.CODICE = ur2.RUOLO_CODICE"
			+ "			                       WHERE 1=1"
			+ "			                           AND u2.id = utente.id"
			+ "			                           AND  ( COALESCE(:ruoli) IS NULL   OR   ruolo2.nome IN (:ruoli) )) = utente.id"
			+ "			              ORDER BY utente.id"
			+ "                      ) as risultato"
			+ "                    INNER JOIN utente_x_ruolo ur "
			+ "			 		ON ur.UTENTE_ID = risultato.CODICE_FISCALE "
			+ "			 	    INNER JOIN ruolo ruolo "
			+ "			 		ON ruolo.CODICE = ur.RUOLO_CODICE",
			nativeQuery = true)
	public Set<UtenteEntity> findUtentiPerReferenteDelegatoEntePartnerProgettiPerDownload(
			@Param(value = "idProgramma") Long idProgramma,
			@Param(value = "idProgetto") Long idProgetto,
			@Param(value = "idEnte") Long idEnte,
			@Param(value = "cfUtente")String cfUtente, 
			@Param(value = "criterioRicerca") String criterioRicerca,
			@Param(value = "criterioRicercaLike") String criterioRicercaLike, 
			@Param(value = "ruoli") List<String> ruoli);

	@Query(value = "SELECT * "
			+ "	FROM utente utente "
			+ "	WHERE utente.id IN (:idsUtenti)",
			nativeQuery = true)
	public List<UtenteEntity> findListaUtentiByIdUtenti(@Param(value = "idsUtenti") List<Long> idsUtenti);

	@Query(value = ""
			+ "	SELECT * "
			+ "	FROM utente utente "
			+ "	WHERE utente.codice_fiscale = :codiceFiscale "
			+ "		AND utente.id <> :idUtente",
			nativeQuery = true)
	public Optional<UtenteEntity> findUtenteByCodiceFiscaleAndIdDiverso(
			@Param(value = "codiceFiscale") String codiceFiscale,
			@Param(value = "idUtente") Long idUtente);

	@Query(value = ""
			+ "	SELECT "
			+ "			count(distinct cf_utente, RUOLO) "
			+ "	FROM ( "
			+ "		SELECT "
			+ "			rdgp.cf_utente, 'REP/DEP' as 'RUOLO' "
			+ "		FROM"
			+ "			referente_delegati_gestore_programma rdgp "
			+ "		WHERE 1=1 "
			+ "			AND rdgp.id_programma = :idProgramma 	"
			+ "			AND rdgp.id_ente = :idEnte     		 	"
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ "		rdgp.cf_utente, 'REGP/DEGP' as 'RUOLO' "
			+ "	FROM "
			+ "		referente_delegati_gestore_progetto rdgp "
			+ "		INNER JOIN progetto p ON p.id = rdgp.id_progetto AND p.id_ente_gestore_progetto = rdgp.id_ente "
			+ "		INNER JOIN programma pr ON pr.id = p.id_programma "
			+ "	WHERE 1=1 "
			+ "		AND pr.id =  :idProgramma  					"
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ " 	rdp.cf_utente, 'REPP/DEPP' as 'RUOLO' "
			+ " FROM "
			+ "		referente_delegati_partner rdp "
			+ "		INNER JOIN progetto p ON p.id = rdp.id_progetto    "
			+ "		INNER JOIN programma pr ON pr.id = p.id_programma  "
			+ " WHERE 1=1"
			+ "		AND pr.id =  :idProgramma  	  				"
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ "		espf.id_facilitatore as cf_utente, 'FAC/VOL' as 'RUOLO' "
			+ "	FROM"
			+ "		ente_sede_progetto_facilitatore espf "
			+ "		INNER JOIN progetto p ON p.id = espf.id_progetto AND p.id_ente_gestore_progetto = espf.id_ente "
			+ "		INNER JOIN programma pr ON pr.id = p.id_programma "
			+ "	WHERE 1=1 "
			+ "		AND pr.id =  :idProgramma 	  				"
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ "		espf.id_facilitatore as cf_utente, 'FAC/VOL' as 'RUOLO' "
			+ " FROM"
			+ "		ente_sede_progetto_facilitatore espf "
			+ "		INNER JOIN ente_partner ep ON espf.id_progetto = ep.id_progetto AND espf.id_ente = ep.id_ente "
			+ "		INNER JOIN progetto p ON p.id = espf.id_progetto  "
			+ "		INNER JOIN programma pr ON pr.id = p.id_programma "
			+ " WHERE 1=1 "
			+ "		AND pr.id =  :idProgramma  		    		"
			+ " ) as utentiAssociatiAProgrammaEnte"
			+ "	INNER JOIN utente u ON u.codice_fiscale = utentiAssociatiAProgrammaEnte.cf_utente "
			+ " WHERE 1=1 "
			+ "		AND u.id = :idUtente	",
			nativeQuery = true)
	public int isUtenteAssociatoProgrammaAndEnte(
			@Param(value = "idUtente") Long idUtente, 
			@Param(value = "idProgramma") Long idProgramma, 
			@Param(value = "idEnte") Long idEnte
		);

	@Query(value = ""
			+ "	SELECT "
			+ "		count(distinct cf_utente, RUOLO) "
			+ "	FROM ( "
			+ " 	SELECT "
			+ "		rdgp.cf_utente, 'REGP/DEGP' as 'RUOLO' "
			+ "	FROM "
			+ "		referente_delegati_gestore_progetto rdgp "
			+ "		INNER JOIN progetto p ON p.id = rdgp.id_progetto AND p.id_ente_gestore_progetto = rdgp.id_ente "
			+ "	WHERE 1=1 "
			+ "		AND p.id =  :idProgetto  		"
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ " 	rdp.cf_utente, 'REPP/DEPP' as 'RUOLO' "
			+ " FROM "
			+ "		referente_delegati_partner rdp "
			+ " WHERE 1=1"
			+ "		AND rdp.id_progetto =  :idProgetto  	  "
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ "		espf.id_facilitatore as cf_utente, 'FAC/VOL' as 'RUOLO' "
			+ "	FROM"
			+ "		ente_sede_progetto_facilitatore espf "
			+ "		INNER JOIN progetto p ON p.id = espf.id_progetto AND p.id_ente_gestore_progetto = espf.id_ente "
			+ "	WHERE 1=1 "
			+ "		AND p.id =  :idProgetto 	    "
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ "		espf.id_facilitatore as cf_utente, 'FAC/VOL' as 'RUOLO' "
			+ " FROM"
			+ "		ente_sede_progetto_facilitatore espf "
			+ "		INNER JOIN ente_partner ep ON espf.id_progetto = ep.id_progetto AND espf.id_ente = ep.id_ente "
			+ " WHERE 1=1 "
			+ "		AND ep.id_progetto = :idProgetto  		    "
			+ " ) as utentiAssociatiAProgrammaProgetto"
			+ "	INNER JOIN utente u ON u.codice_fiscale = utentiAssociatiAProgrammaProgetto.cf_utente "
			+ " WHERE 1=1 "
			+ "		AND u.id = :idUtente	",
			nativeQuery = true)
	public int isUtenteAssociatoProgrammaAndProgetto(
			@Param(value = "idUtente")   Long idUtente, 
			@Param(value = "idProgetto")  Long idProgetto
		);
	
	@Query(value = ""
			+ "	SELECT "
			+ "		count(distinct cf_utente, RUOLO) "
			+ "	FROM ( "
			+ " SELECT "
			+ "		espf.id_facilitatore as cf_utente, 'FAC/VOL' as 'RUOLO' "
			+ "	FROM"
			+ "		ente_sede_progetto_facilitatore espf "
			+ "		INNER JOIN progetto p ON p.id = espf.id_progetto AND p.id_ente_gestore_progetto = espf.id_ente "
			+ "	WHERE 1=1 "
			+ "		AND p.id =  :idProgetto "
			+ "     and espf.id_ente = :idEnte	    "
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ "		espf.id_facilitatore as cf_utente, 'FAC/VOL' as 'RUOLO' "
			+ " FROM"
			+ "		ente_sede_progetto_facilitatore espf "
			+ "		INNER JOIN ente_partner ep ON espf.id_progetto = ep.id_progetto AND espf.id_ente = ep.id_ente "
			+ " WHERE 1=1 "
			+ "		AND ep.id_progetto = :idProgetto "
			+ "     and espf.id_ente = :idEnte 		    "
			+ " ) as utentiAssociatiAProgrammaProgetto"
			+ "	INNER JOIN utente u ON u.codice_fiscale = utentiAssociatiAProgrammaProgetto.cf_utente "
			+ " WHERE 1=1 "
			+ "		AND u.id = :idUtente	",
			nativeQuery = true)
	public int isUtenteAssociatoFAC(
			@Param(value = "idUtente")   Long idUtente, 
			@Param(value = "idProgetto")  Long idProgetto,
			@Param(value = "idEnte")  Long idEnte
		);
	
	@Query(value = ""
			+ "	SELECT "
			+ "		count(distinct cf_utente, RUOLO) "
			+ "	FROM ( "
			+ " SELECT "
			+ " 	rdp.cf_utente, 'REPP/DEPP' as 'RUOLO' "
			+ " FROM "
			+ "		referente_delegati_partner rdp "
			+ " WHERE 1=1"
			+ "		AND rdp.id_progetto =  :idProgetto"
			+ "     AND rdp.id_ente = :idEnte  	  "
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ "		espf.id_facilitatore as cf_utente, 'FAC/VOL' as 'RUOLO' "
			+ "	FROM"
			+ "		ente_sede_progetto_facilitatore espf "
			+ "		INNER JOIN progetto p ON p.id = espf.id_progetto AND p.id_ente_gestore_progetto = espf.id_ente "
			+ "	WHERE 1=1 "
			+ "		AND p.id =  :idProgetto "
			+ "     and espf.id_ente = :idEnte	    "
			+ " "
			+ " 	UNION "
			+ " "
			+ " SELECT "
			+ "		espf.id_facilitatore as cf_utente, 'FAC/VOL' as 'RUOLO' "
			+ " FROM"
			+ "		ente_sede_progetto_facilitatore espf "
			+ "		INNER JOIN ente_partner ep ON espf.id_progetto = ep.id_progetto AND espf.id_ente = ep.id_ente "
			+ " WHERE 1=1 "
			+ "		AND ep.id_progetto = :idProgetto "
			+ "     and espf.id_ente = :idEnte 		    "
			+ " ) as utentiAssociatiAProgrammaProgetto"
			+ "	INNER JOIN utente u ON u.codice_fiscale = utentiAssociatiAProgrammaProgetto.cf_utente "
			+ " WHERE 1=1 "
			+ "		AND u.id = :idUtente	",
			nativeQuery = true)
	public int isUtenteAssociatoREPP(
			@Param(value = "idUtente")   Long idUtente, 
			@Param(value = "idProgetto")  Long idProgetto,
			@Param(value = "idEnte")  Long idEnte
			
		);
	
	@Query(value = " "
			+ "SELECT count(*)  "
			+ "FROM (  "
			+ "		  SELECT distinct rdg.CF_UTENTE  "
			+ "			FROM referente_delegati_gestore_programma  rdg  "
			+ "			INNER JOIN programma programma "
			+ "			ON rdg.ID_PROGRAMMA = programma.ID "
			+ "			AND rdg.id_ente = programma.id_ente_gestore_programma "
			+ "			WHERE programma.POLICY = 'SCD'   "
			+ "			AND rdg.CF_UTENTE = :codiceFiscale "
			+ "			"
			+ "         UNION   "
			+ "			   "
			+ "			SELECT distinct rdgp.CF_UTENTE "
			+ "			FROM referente_delegati_gestore_progetto rdgp "
			+ "			INNER JOIN progetto progetto "
			+ "			ON rdgp.ID_PROGETTO = progetto.ID  "
			+ "			AND rdgp.id_ente = progetto.id_ente_gestore_progetto "
			+ "			INNER JOIN programma programma "
			+ "				ON progetto.ID_PROGRAMMA = programma.ID "
			+ "			WHERE programma.POLICY = 'SCD'   "
			+ "         AND rdgp.CF_UTENTE = :codiceFiscale "
			+ "			   "
			+ "			                UNION   "
			+ "			   "
			+ "			SELECT distinct rdp.CF_UTENTE "
			+ "			FROM referente_delegati_partner rdp "
			+ "			INNER JOIN ente_partner ep "
			+ "			ON rdp.ID_PROGETTO = ep.ID_PROGETTO "
			+ "			INNER JOIN progetto progetto "
			+ "			ON ep.ID_PROGETTO = progetto.ID "
			+ "			INNER JOIN programma programma "
			+ "			ON progetto.ID_PROGRAMMA = programma.ID "
			+ "			WHERE programma.POLICY = 'SCD' "
			+ "         AND rdp.CF_UTENTE = :codiceFiscale "
			+ "			   "
			+ "			UNION  "
			+ "			   "
			+ "			SELECT distinct espf.ID_FACILITATORE "
			+ "			FROM ente_sede_progetto_facilitatore espf "
			+ "			INNER JOIN progetto p  "
			+ "			ON espf.ID_PROGETTO = p.ID  "
			+ "			AND espf.id_ente = p.id_ente_gestore_progetto "
			+ "			WHERE espf.RUOLO_UTENTE = 'VOL' "
			+ "         AND espf.ID_FACILITATORE = :codiceFiscale "
			+ "			  "
			+ "			UNION  "
			+ "			  "
			+ "			SELECT distinct espf.ID_FACILITATORE "
			+ "			FROM ente_sede_progetto_facilitatore espf "
			+ "			INNER JOIN ente_partner ep  "
			+ "			ON espf.ID_PROGETTO = ep.id_progetto  "
			+ "			AND espf.id_ente = ep.id_ente "
			+ "			WHERE espf.RUOLO_UTENTE = 'VOL' "
			+ "         AND espf.ID_FACILITATORE = :codiceFiscale "
			+ "	) AS utente_con_ruoli  ",
			nativeQuery = true)
	public int isUtenteConRelazioneProgrammaSCD(
			@Param(value = "codiceFiscale")   String codiceFiscale
		);
}